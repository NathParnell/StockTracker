


<div class="productsContainer">
    <h1>Products</h1>
    <table>
        <tr>
            <th>Category</th>
            <th>Product Code</th>
            <th>Product</th>
            <th>Brand</th>
            <th>Product Size</th>
            <th>Price Per Unit</th>
            <th>Quantity</th>
        </tr>
        @foreach(StockTrackerCommon.Models.Product product in _products)
        {
            <tr  @onclick="() => RowSelected(product)" @ondblclick="() => EditProduct(product)" class="@(_selectedProduct == product ? "selectedRow" : "unselectedRow")">
                <td>@_productCategories.FirstOrDefault(cat => cat.ProductCategoryId == product.ProductCategoryId).ProductCategoryName</td>
                <td>@product.ProductCode</td>
                <td>@product.ProductName</td>
                <td>@product.ProductBrand</td>
                <td>@(product.ProductSize.ToString() + product.ProductMeasurementUnit.ToString())</td>
                <td>@product.Price</td>
                <td>@product.ProductQuantity</td>
            </tr>
        }

    </table>
</div>
<button type="button" id="deleteStockButton" hidden="@(!_isProductSelected)" @onclick="() => DeleteProduct()"><i class="fa-solid fa-minus" style="color: #3e67ac;"></i></button>
<button type="button" id="addStockButton" @onclick="() => AddProduct()"><i class="fa-solid fa-plus" style="color: #3e67ac;"></i></button>

