@page "/ViewSupplier/{SupplierId?}";

@using StockTrackerCommon.Models;


<div class="viewSupplierContainer">
    <div class="supplierContainer">
        <div class="supplierDetails">
            <h1>@_supplier.CompanyName</h1>
            <h3>Based in: @_supplier.City, @_supplier.CountryCode</h3>
            <h3>Contact Email: @_supplier.Email</h3>
        </div>  
    </div>
    <div class="productCategoriesContainer">
        @foreach (ProductCategory category in _productCategories)
        {
            <h2>@category.ProductCategoryName</h2>
            <div class="productCategoryContainer">
                @foreach (Product product in _products.Where(prod => prod.ProductCategoryId == category.ProductCategoryId))
                {
                    <div class="productContainer">
                        <div class="productDetails">
                            <h3>@product.ProductName</h3>
                            <button type="button" @onclick="() => ManageProductSubscription(product.ProductId)">
                                @if (_customerService.CurrentUser.ProductSubscriptions.Contains(product.ProductId))
                                {
                                    <p style="margin: 0 auto;">Unsubscribe from product notifications</p>
                                }
                                else
                                {
                                    <p style="margin: 0 auto;">Subscribe to product notifications</p>
                                }
                            </button>
                            <h4>Brand: @product.ProductBrand</h4>
                            <h4>Price: £@product.Price</h4>
                            <h4>Size: @(product.ProductSize.ToString() + " " + product.ProductMeasurementUnit.ToString())</h4>
                        </div>
                        <div class="productBasket">
                            <input type="number" @bind-value="_productBasketQuantities[product.ProductId]" min="0" />
                            <button type="button" @onclick="() => UpdateBasket(product)">
                                @(_orderService.BasketItems.Any(item => item.ProductId == product.ProductId) ? "Update Basket" : "Add To Basket")
                            </button>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
    <button id="viewBasketButton" @onclick="() => ViewBasket()">View Basket</button>
</div>